# Copyright Â© Idiap Research Institute <contact@idiap.ch>
#
# SPDX-License-Identifier: BSD-3-Clause

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "jupyterhub-multiauthenticator"
version = "0.4.0"
authors = [{name = "Samuel Gaist", email = "samuel.gaist@idiap.ch"}]
description = "Authenticator multiplexer for JupyterHub"
readme = "README.md"
keywords = ["JupyterHub", "Authenticator"]
license = {text = "BSD-3-Clause"}
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "jupyterhub",
    "importlib_metadata>=4.6; python_version < '3.10'",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-asyncio", "oauthenticator"]
dev = ["pre-commit", "jupyterhub-multiauthenticator[test]"]

[project.entry-points."jupyterhub.authenticators"]
multiauthenticator = "multiauthenticator:MultiAuthenticator"

[tool.setuptools]
packages = ["multiauthenticator"]

# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
# target-version should be all supported versions, see
# https://github.com/psf/black/issues/751#issuecomment-473066811
target_version = [
    "py37",
    "py38",
    "py39",
    "py310",
    "py311",
]


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10"
testpaths = ["multiauthenticator/tests"]


# pytest-cov / coverage is used to measure code coverage of tests
#
# ref: https://coverage.readthedocs.io/en/stable/config.html
#
[tool.coverage.run]
omit = [
  "multiauthenticator/tests/**",
]

[tool.coverage.report]
show_missing = true

# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/idiap/multiauthenticator"

[tool.tbump.version]
current = "0.4.0"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    (?P<pre>((a|b|rc)\d+)|)
    \.?
    (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "multiauthenticator/__init__.py"
